{"version":3,"file":"index.es5.js","sources":["../lib/PaymentWidget.js"],"sourcesContent":["/**\n * Creates an instance of ChimoneyWidget.\n *\n * @class ChimoneyWidget\n * @param {Object} options - Configuration options for the widget.\n * @param {string} options.paymentLink - The URL to the Chimoney payment page, required for initializing the widget. This must be a valid URL.\n * @param {string} [options.brandColor='#000'] - Customize the primary color of the payment widget to match your brand theme. Default is black.\n * @param {string} [options.brandName='Chimoney'] - Your brand's name, which will be displayed on the widget to enhance trust. Default is 'Chimoney'.\n * @param {boolean} [options.backgroundColor=\"#ffffff\"] - The background color.\n *\n * @throws {Error} Throws an error if the paymentLink is not provided or is invalid.\n *\n * @example\n * const chimoneyPay = new ChimoneyWidget({\n *   paymentLink: 'https://dash.chimoney.io/pay?issueID=your_unique_issue_id',\n *   brandColor: '#FF5722',\n *   brandName: 'Your Brand'\n * });\n */\n\nclass ChimoneyWidget {\n  /**\n   * Constructs the ChimoneyWidget with user-provided options.\n   * Validates the mandatory `paymentLink` parameter.\n   * Initializes modal and iframe components.\n   *\n   * @param {Object} options - Configuration options for the widget.\n   * @param {string} options.paymentLink - The URL to the Chimoney payment page.\n   * @param {string} [options.brandColor='#000'] - Primary color of the widget, default is black.\n   * @param {string} [options.brandName='Chimoney'] - Name of the brand, default is 'Chimoney'.\n   * @param {boolean} [options.turnOffNotification=false] - If true, disables notifications from Chimoney.\n   * @param {Object} [options.meta] - Metadata for tracking or additional purposes.\n   * @param {boolean} [options.backgroundColor=\"#ffffff\"] - The background color.\n   * @throws {Error} If `paymentLink` is not provided or invalid.\n   */\n  constructor (options = {}) {\n    this.validateOptions(options);\n    this.options = options;\n    this.modal = null;\n    this.iframe = null;\n    this.createModal();\n  }\n\n  /**\n   * Validates the options object, particularly the `paymentLink`.\n   * @param {Object} options - The options provided to the constructor.\n   * @throws {Error} If the `paymentLink` is missing or invalid.\n   */\n  validateOptions (options) {\n    if (!options.paymentLink || !this.isValidUrl(options.paymentLink)) {\n      throw new Error('Invalid or missing paymentLink.');\n    }\n  }\n\n  /**\n   * Checks if a URL is valid.\n   * @param {string} url - The URL to validate.\n   * @returns {boolean} True if the URL is valid, false otherwise.\n   */\n  isValidUrl (url) {\n    try {\n      URL(url);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  /**\n   * Creates and appends the modal element to the DOM.\n   * The modal serves as a container for the iframe.\n   */\n  createModal () {\n    const modalHTML = `\n            <div id=\"chimoneyModal\" style=\"display:none; position: fixed; z-index: 1000; left: 0; top: 0; width: 100%; height: 100%; overflow: auto; background-color: rgba(0,0,0,0.4);\">\n                <div style=\"background-color: #fefefe; margin: 15% auto; padding: 20px; border: 1px solid #888; width: 80%; border-radius: 10px; box-shadow: 0 4px 6px rgba(0,0,0,0.1);\">\n                    <span id=\"closeModal\" style=\"color: #aaa; float: right; font-size: 28px; font-weight: bold; cursor: pointer;\">&times;</span>\n                    <iframe id=\"chimoneyPaymentFrame\" style=\"width:100%; height:500px; border:none; border-radius: 5px;\"></iframe>\n                </div>\n            </div>\n        `;\n    document.body.insertAdjacentHTML('beforeend', modalHTML);\n    this.modal = document.getElementById('chimoneyModal');\n    this.iframe = document.getElementById('chimoneyPaymentFrame');\n    document\n      .getElementById('closeModal')\n      .addEventListener('click', () => this.close());\n  }\n\n  /**\n   * Opens the modal containing the iframe.\n   * This method makes the modal visible, showing the payment interface.\n   */\n  open (paymentLink) {\n    this.applyBranding(); // Apply branding styles if any\n    this.iframe.style.width = '100%';\n    this.iframe.style.height = '100%';\n    this.iframe.src = this.appendCustomizations(paymentLink);\n    this.modal.style.display = 'block';\n  }\n\n  /**\n   * Closes the modal containing the iframe.\n   * This method hides the modal, effectively closing the payment interface.\n   */\n  close () {\n    this.modal.style.display = 'none';\n  }\n\n  applyBranding () {\n    if (this.options.brandColor) {\n      this.modal.querySelector('div').style.borderColor =\n        this.options.brandColor;\n    }\n    if (this.options.modalBackground) {\n      this.modal.style.backgroundColor = this.options.modalBackground;\n    }\n  }\n\n  appendCustomizations (url) {\n    // Assuming the Chimoney API can handle URL parameters for customization\n    const urlParams = new URLSearchParams(this.options).toString();\n    return `${url}?${urlParams}`;\n  }\n}\n\nexport default ChimoneyWidget;\n"],"names":["ChimoneyWidget","options","arguments","length","undefined","_classCallCheck","validateOptions","modal","iframe","createModal","_createClass","key","value","paymentLink","isValidUrl","Error","url","URL","e","_this","modalHTML","document","body","insertAdjacentHTML","getElementById","addEventListener","close","open","applyBranding","style","width","height","src","appendCustomizations","display","brandColor","querySelector","borderColor","modalBackground","backgroundColor","urlParams","URLSearchParams","toString","concat"],"mappings":"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"}